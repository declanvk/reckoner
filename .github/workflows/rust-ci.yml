name: Rust CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "*"

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable
          - beta
          - nightly
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v1
        with:
          submodules: recursive
      - name: Install ${{ matrix.rust }} toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      # According to https://github.com/actions/virtual-environments/issues/104
      # libclang has been installed by default in the Windows image, but is not 
      # present in the path.
      - name: Update path variable for Windows
        if: startsWith(matrix.os, 'windows')
        run: echo "::add-path::C:\msys64\mingw64\bin"
      - name: Update dependencies
        uses: actions-rs/cargo@v1
        with:
          command: update
      - name: Cache target directory
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.OS }}-${{ matrix.Rust }}-build-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.Rust }}-build-${{ env.cache-name }}-
            ${{ matrix.os }}-${{ matrix.Rust }}-build-
            ${{ matrix.os }}-${{ matrix.Rust }}-
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v1
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt
      - name: Check format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v1
        with:
          submodules: recursive
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: clippy
      - name: Lint
        uses: actions-rs/cargo@v1
        with:
          command: clippy
